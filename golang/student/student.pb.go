// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.15.8
// source: student.proto

package student

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StudentByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *StudentByIdRequest) Reset() {
	*x = StudentByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentByIdRequest) ProtoMessage() {}

func (x *StudentByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentByIdRequest.ProtoReflect.Descriptor instead.
func (*StudentByIdRequest) Descriptor() ([]byte, []int) {
	return file_student_proto_rawDescGZIP(), []int{0}
}

func (x *StudentByIdRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type Student struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName                  string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Gender                    int32  `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Code                      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Birthday                  string `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`
	CitizenIdentificationCode string `protobuf:"bytes,5,opt,name=citizen_identification_code,json=citizenIdentificationCode,proto3" json:"citizen_identification_code,omitempty"`
	StudentType               int32  `protobuf:"varint,6,opt,name=student_type,json=studentType,proto3" json:"student_type,omitempty"`
	BirthPlace                string `protobuf:"bytes,7,opt,name=birth_place,json=birthPlace,proto3" json:"birth_place,omitempty"`
	Ethnic                    string `protobuf:"bytes,8,opt,name=ethnic,proto3" json:"ethnic,omitempty"`
	PermanentAddress          string `protobuf:"bytes,9,opt,name=permanent_address,json=permanentAddress,proto3" json:"permanent_address,omitempty"`
	FatherName                string `protobuf:"bytes,10,opt,name=father_name,json=fatherName,proto3" json:"father_name,omitempty"`
	FatherBirthYear           string `protobuf:"bytes,11,opt,name=father_birth_year,json=fatherBirthYear,proto3" json:"father_birth_year,omitempty"`
	FatherJob                 string `protobuf:"bytes,12,opt,name=father_job,json=fatherJob,proto3" json:"father_job,omitempty"`
	MotherName                string `protobuf:"bytes,13,opt,name=mother_name,json=motherName,proto3" json:"mother_name,omitempty"`
	MotherBirthYear           string `protobuf:"bytes,14,opt,name=mother_birth_year,json=motherBirthYear,proto3" json:"mother_birth_year,omitempty"`
	MotherJob                 string `protobuf:"bytes,15,opt,name=mother_job,json=motherJob,proto3" json:"mother_job,omitempty"`
	Status                    string `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	DisabilityType            string `protobuf:"bytes,17,opt,name=disability_type,json=disabilityType,proto3" json:"disability_type,omitempty"`
	AcademicAbility           string `protobuf:"bytes,18,opt,name=academic_ability,json=academicAbility,proto3" json:"academic_ability,omitempty"`
	Avatar                    string `protobuf:"bytes,19,opt,name=avatar,proto3" json:"avatar,omitempty"`
	MotherPhoneNumber         string `protobuf:"bytes,20,opt,name=mother_phone_number,json=motherPhoneNumber,proto3" json:"mother_phone_number,omitempty"`
	FatherPhoneNumber         string `protobuf:"bytes,21,opt,name=father_phone_number,json=fatherPhoneNumber,proto3" json:"father_phone_number,omitempty"`
}

func (x *Student) Reset() {
	*x = Student{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Student) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Student) ProtoMessage() {}

func (x *Student) ProtoReflect() protoreflect.Message {
	mi := &file_student_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Student.ProtoReflect.Descriptor instead.
func (*Student) Descriptor() ([]byte, []int) {
	return file_student_proto_rawDescGZIP(), []int{1}
}

func (x *Student) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Student) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *Student) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Student) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *Student) GetCitizenIdentificationCode() string {
	if x != nil {
		return x.CitizenIdentificationCode
	}
	return ""
}

func (x *Student) GetStudentType() int32 {
	if x != nil {
		return x.StudentType
	}
	return 0
}

func (x *Student) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *Student) GetEthnic() string {
	if x != nil {
		return x.Ethnic
	}
	return ""
}

func (x *Student) GetPermanentAddress() string {
	if x != nil {
		return x.PermanentAddress
	}
	return ""
}

func (x *Student) GetFatherName() string {
	if x != nil {
		return x.FatherName
	}
	return ""
}

func (x *Student) GetFatherBirthYear() string {
	if x != nil {
		return x.FatherBirthYear
	}
	return ""
}

func (x *Student) GetFatherJob() string {
	if x != nil {
		return x.FatherJob
	}
	return ""
}

func (x *Student) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *Student) GetMotherBirthYear() string {
	if x != nil {
		return x.MotherBirthYear
	}
	return ""
}

func (x *Student) GetMotherJob() string {
	if x != nil {
		return x.MotherJob
	}
	return ""
}

func (x *Student) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Student) GetDisabilityType() string {
	if x != nil {
		return x.DisabilityType
	}
	return ""
}

func (x *Student) GetAcademicAbility() string {
	if x != nil {
		return x.AcademicAbility
	}
	return ""
}

func (x *Student) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Student) GetMotherPhoneNumber() string {
	if x != nil {
		return x.MotherPhoneNumber
	}
	return ""
}

func (x *Student) GetFatherPhoneNumber() string {
	if x != nil {
		return x.FatherPhoneNumber
	}
	return ""
}

type StudentUpdateIsHaveAspirationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *StudentUpdateIsHaveAspirationRequest) Reset() {
	*x = StudentUpdateIsHaveAspirationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentUpdateIsHaveAspirationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentUpdateIsHaveAspirationRequest) ProtoMessage() {}

func (x *StudentUpdateIsHaveAspirationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentUpdateIsHaveAspirationRequest.ProtoReflect.Descriptor instead.
func (*StudentUpdateIsHaveAspirationRequest) Descriptor() ([]byte, []int) {
	return file_student_proto_rawDescGZIP(), []int{2}
}

func (x *StudentUpdateIsHaveAspirationRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type StudentUpdateIsHaveAspirationRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StudentUpdateIsHaveAspirationRespone) Reset() {
	*x = StudentUpdateIsHaveAspirationRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentUpdateIsHaveAspirationRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentUpdateIsHaveAspirationRespone) ProtoMessage() {}

func (x *StudentUpdateIsHaveAspirationRespone) ProtoReflect() protoreflect.Message {
	mi := &file_student_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentUpdateIsHaveAspirationRespone.ProtoReflect.Descriptor instead.
func (*StudentUpdateIsHaveAspirationRespone) Descriptor() ([]byte, []int) {
	return file_student_proto_rawDescGZIP(), []int{3}
}

var File_student_proto protoreflect.FileDescriptor

var file_student_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x6d, 0x65, 0x78, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x33,
	0x0a, 0x12, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xf3, 0x05, 0x0a, 0x07, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x1b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x74, 0x68, 0x6e,
	0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x74, 0x68, 0x6e, 0x69, 0x63,
	0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x24, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x48, 0x61, 0x76, 0x65,
	0x41, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x26, 0x0a, 0x24, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x48, 0x61, 0x76, 0x65, 0x41, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x32, 0xe6, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x78,
	0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6d, 0x65, 0x78, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x1d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x48, 0x61, 0x76, 0x65, 0x41, 0x73, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x6d, 0x65, 0x78, 0x2e, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x48, 0x61, 0x76, 0x65, 0x41, 0x73, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d,
	0x65, 0x78, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x48, 0x61, 0x76, 0x65,
	0x41, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_student_proto_rawDescOnce sync.Once
	file_student_proto_rawDescData = file_student_proto_rawDesc
)

func file_student_proto_rawDescGZIP() []byte {
	file_student_proto_rawDescOnce.Do(func() {
		file_student_proto_rawDescData = protoimpl.X.CompressGZIP(file_student_proto_rawDescData)
	})
	return file_student_proto_rawDescData
}

var file_student_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_student_proto_goTypes = []interface{}{
	(*StudentByIdRequest)(nil),                   // 0: mex.school.v1.StudentByIdRequest
	(*Student)(nil),                              // 1: mex.school.v1.Student
	(*StudentUpdateIsHaveAspirationRequest)(nil), // 2: mex.school.v1.StudentUpdateIsHaveAspirationRequest
	(*StudentUpdateIsHaveAspirationRespone)(nil), // 3: mex.school.v1.StudentUpdateIsHaveAspirationRespone
}
var file_student_proto_depIdxs = []int32{
	0, // 0: mex.school.v1.StudentService.StudentById:input_type -> mex.school.v1.StudentByIdRequest
	2, // 1: mex.school.v1.StudentService.StudentUpdateIsHaveAspiration:input_type -> mex.school.v1.StudentUpdateIsHaveAspirationRequest
	1, // 2: mex.school.v1.StudentService.StudentById:output_type -> mex.school.v1.Student
	3, // 3: mex.school.v1.StudentService.StudentUpdateIsHaveAspiration:output_type -> mex.school.v1.StudentUpdateIsHaveAspirationRespone
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_student_proto_init() }
func file_student_proto_init() {
	if File_student_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_student_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Student); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentUpdateIsHaveAspirationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentUpdateIsHaveAspirationRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_student_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_student_proto_goTypes,
		DependencyIndexes: file_student_proto_depIdxs,
		MessageInfos:      file_student_proto_msgTypes,
	}.Build()
	File_student_proto = out.File
	file_student_proto_rawDesc = nil
	file_student_proto_goTypes = nil
	file_student_proto_depIdxs = nil
}
